#!/usr/bin/env bash
python3 -m venv /tmp/venv >/dev/null 2>&1
source /tmp/venv/bin/activate >/dev/null 2>&1
pip install --upgrade pip >/dev/null 2>&1

for DIR in `find . -maxdepth 1 -type d`
do
    cd $DIR >/dev/null 2>&1
    MYPKG=`echo $PWD|  rev|awk -F'/' '{ print $1 }'|rev`
    python3 -m venv venv >/dev/null 2>&1
    source venv/bin/activate >/dev/null 2>&1
    pip install --upgrade pip >/dev/null 2>&1
    #if we have a setup.py 

    if [[ -f setup.py ]];
    then
      #loop until build dependecies are cleare
      LOOP="YES"
      while [[ $LOOP == "YES" ]];
      do
        python3 setup.py bdist_rpm --spec-only >/tmp/std.log 2>&1
        if [[ $? == 0 ]];
        then
          LOOP="NO"
        else
          for MODULE in `cat  /tmp/std.log |grep "No module named" |awk -F"'" '{ print $2 }'`
          do
            pip install $MODULE
          done
        fi
      done

      #create a magic spec file for scl 
      if [[ $? == 0 ]];
      then
        cat dist/*.spec > $DIR.spec
        spec2scl $DIR.spec > $DIR.scl.pre.spec
        awk '/record=INSTALLED_FILES/ { print; print "sed -i \"'s#^#/opt/{{ organisation }}/{{organisation}}-{{ project }}#'\"" ; next }1' $DIR.scl.pre.spec > $DIR.scl.pre.spec.1
        cat $DIR.scl.pre.spec.1 | sed 's#root=$RPM_BUILD_ROOT#root=$RPM_BUILD_ROOT/opt/{{ organisation }}/{{ organisation }}-{{ project }} INSTALLED_FILES#' > $DIR.scl.pre.spec.2
        cat $DIR.scl.pre.spec.2 | sed "s/Source0:/Source0: ${MYPKG}.tar.gz\n#/" > $DIR.scl.pre.spec.3
        cat $DIR.scl.pre.spec.3 | sed "s/\setup -n /setup -n ${MYPKG}.tar.gz\n#/" > $DIR.scl.spec
      fi
    fi
    cd -
done

