#!/usr/bin/env bash
PROJECT=$2
ORG=$1
touch /root/rpmbuild/SOURCES/README
touch /root/rpmbuild/SOURCES/LICENSE

cd 
rpmbuild -ba {{ organisation }}.{{ project }}.meta.scl.spec >/dev/null 2>&1
if [[ $? == 0 ]];
then
  echo "`date`: SCL metapackage build ok"
else
  echo "`date`: SCL metapackage build failed"
  exit 1
fi

rpm -i /root/rpmbuild/RPMS/x86_64/{{ organisation }}-{{ project }}-runtime-{{ scl_version }}-{{ scl_release }}.el8.x86_64.rpm
if [[ $? == 0 ]];
then
  echo "`date`: SCL metapackage installed ok"
else
  echo "`date`: SCL metapackage install failed"
  exit 1
fi


pip3 install --upgrade pip >/dev/null 2>&1
pip3 install spec2scl

for DIR in `find /root/rpmbuild/SOURCES -maxdepth 2 -type d`
do
    echo $DIR
    cd $DIR >/dev/null 2>&1

    MYPKG=`echo $PWD|  rev|awk -F'/' '{ print $1 }'|rev`
    MYNAME=`echo $PWD|  rev|awk -F'/' '{ print $2 }'|rev`
    pip3 install --upgrade pip >/dev/null 2>&1
    #if we have a setup.py 

    if [[ -f setup.py ]];
    then
      #loop until build dependecies are cleare
      LOOP="YES"
      while [[ $LOOP == "YES" ]];
      do
        python3 setup.py bdist_rpm --spec-only >/tmp/std.log 2>&1
        if [[ $? == 0 ]];
        then
          LOOP="NO"
        else
          for MODULE in `cat  /tmp/std.log |grep "No module named" |awk -F"'" '{ print $2 }'`
          do
            pip3 install $MODULE
          done
          for PKGDIR in `cat  /tmp/std.log |grep "error: package directory" |awk -F"'" '{ print $2 }'`
          do
            mkdir $PKGDIR
            touch ${PKGDIR}/__init__.py
          done
        fi
      done



      #create a magic spec file for scl 
      if [[ $? == 0 ]];
      then
        cat dist/*.spec > $DIR.spec
        spec2scl $DIR.spec > $DIR.scl.pre.spec
        awk '/record=INSTALLED_FILES/ { print; print "sed -i \"'s#^#/opt/{{ organisation }}/{{organisation}}-{{ project }}#'\" INSTALLED_FILES " ; next }1' $DIR.scl.pre.spec  > $DIR.scl.pre.spec.1
        cat $DIR.scl.pre.spec.1 | sed 's#root=$RPM_BUILD_ROOT#root=$RPM_BUILD_ROOT/opt/{{ organisation }}/{{ organisation }}-{{ project }}/root #' > $DIR.scl.pre.spec.2
        cat $DIR.scl.pre.spec.2 | sed "s#Source0:#Source0: http://repos.pip2scl.dk/SOURCES/${MYPKG}.tar.gz\nDELETELINE#"  |grep -v "^DELETELINE" > $DIR.scl.pre.spec.3
        MYNAME=`echo $DIR | awk -F"${MYPKG}" '{ print $1 }'`
        cat $DIR.scl.pre.spec.3 | sed "s#setup -n #setup -n ${MYPKG}\nDELETELINE#" |grep -v "^DELETELINE" > /root/rpmbuild/SPECS/${ORG}.${PROJECT}.${MYPKG}.scl.spec
        scp /root/rpmbuild/SPECS/${ORG}.${PROJECT}.${MYPKG}.scl.spec root@repos.pip2scl.dk:/usr/share/nginx/html/SPECS
      fi
      cd ..
      tar -czf /root/rpmbuild/SOURCES/$MYPKG.tar.gz $MYPKG
      scp  /root/rpmbuild/SOURCES/$MYPKG.tar.gz root@repos.pip2scl.dk:/usr/share/nginx/html/SOURCES
      rpmbuild -ba /root/rpmbuild/SPECS/${ORG}.${PROJECT}.${MYPKG}.scl.spec  --define "scl {{ organisation }}-{{ project }}"
    fi
    cd -
done

scp -r /root/rpmbuild/RPMS/* repos.pip2scl.dk://usr/share/nginx/html/RPMS/
