- name:  sclbuilder | copy scl builder script 
  ansible.builtin.template:
    src: sclbuilder.sh.j2
    dest: /usr/local/bin/sclbuilder.sh
    mode: 755
    force: yes
  become: True


- name:  sclbuilder | copy scl builder script 
  ansible.builtin.template:
    src: "{{ item }}.sh.j2"
    dest: "/usr/local/bin/{{ item }}.sh"
    mode: 755
    force: yes
  become: True
  loop: 
    - sclbuilder_download
    - sclbuilder_checkpackage
    - sclbuilder_buildrpm
    - sclbuilder_buildscl



- name:  sclbuilder | copy mergerfile
  ansible.builtin.template:
    src: mergefiles.sh.j2
    dest: /usr/local/bin/mergefiles.sh
    mode: 755
    force: yes
  become: True

- name:  sclbuilder | copy mandatory specfile add.j2
  ansible.builtin.template:
    src: mandatory_after_setup.add.j2
    dest: /usr/local/bin/mandatory_after_setup.add
    mode: 755
    force: yes
  become: True

- name:  sclbuilder | copy mandatory specfile script.j2
  ansible.builtin.template:
    src: mandatory_after_setup.sh.j2
    dest: /usr/local/bin/mandatory_after_setup.sh
    mode: 755
    force: yes
  become: True


- name:  sclbuilder | copy prettyspec.sh.j2
  ansible.builtin.template:
    src: prettyspec.sh.j2
    dest: /usr/local/bin/prettyspec.sh
    mode: 755
    force: yes
  become: True

- name: build_rpms | create a pip downloader
  ansible.builtin.copy:
    src: pip-downloader.py
    dest: /usr/local/bin/pip-downloader.py
    owner: root
    group: root
    mode: '0755'

- name: " build_virtual_environments | Build a virtual environment face 2 : update pip ({{ project }} - {{ version }})"
  pip:
    name: ['spec2scl', 'requests','setuptools-rust', 'wheel', 'requirements-parser']
    state: latest
  become: True


- name:  create_specfiles | create a tailored metaspecfile
  ansible.builtin.template:
    src: metascl.spec.j2
    dest: /root/{{ organisation }}.{{ project }}.meta.scl.spec
    mode: 644
    force: yes
  become: True

- name:  create_specfiles | create a tailored metaspecfile for {{ project }}
  ansible.builtin.template:
    src: project.specfile.spec.j2
    dest: /root/{{ organisation }}.{{ project }}.project.spec
    mode: 644
    force: yes
  become: True

- name: create_specfiles | Touch /root/rpmbuild/SOURCES/LICENSE
  shell: touch /root/rpmbuild/SOURCES/LICENSE
  become: True


- name: create project directory {{ project_dir }}
  file: state=directory path={{ project_dir }}

- name: download sources
  get_url: url={{ requirementfile }} dest={{ project_dir }}/{{ project }}.requirement.txt

- name: create_specfiles | update pip
  shell: pip3 install --upgrade pip
  become: True
  